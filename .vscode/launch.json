{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Pico Debug",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/build/pico_app.elf",
      "request": "launch",
      "type": "cortex-debug",
      "servertype": "external",
      "gdbPath": "gdb-multiarch",
      //  "gdbTarget" : "/dev/ttyACM2",
      "gdbTarget": "/dev/ttyACM0",
      "device": "RP2040",
      "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",

      // runToEntryPoint causes differences in behavour between launch and reset
      // so best avoided for this use case.
      //"runToEntryPoint": "main",

      // breakAfterReset means it consistantly stops in the reset handler code
      // so we can follow that with some commands to get us to main
      "breakAfterReset": true,

      // get_to_main puts a breakpoint at main, gets there, and then remove is
      // immediately after flashing. This means that by the time any ram based
      // breakpoints are applied the relevant stuff is in RAM.
      "postLaunchCommands": [
        "break main",
        "continue",
        "shell sleep 0.1",
        "clear main"
      ],
      // With breakAfterReset we have a consistent approach so can use the same
      // commands to get us to main after a restart...
      "postRestartCommands": [
        "break main",
        "continue",
        "shell sleep 0.1",
        "clear main"
      ]
    },
    {
      "name": "Wokwi GDB",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/pico_app.elf",
      "cwd": "${workspaceFolder}",
      "MIMode": "gdb",
      "miDebuggerPath": "gdb-multiarch",
      "miDebuggerServerAddress": "localhost:3333"
    },
    /*{
      "name": "Cortex Debug",
      "cwd": "${workspaceRoot}",
      "executable": "${command:cmake.launchTargetPath}",
      "request": "launch",
      "type": "cortex-debug",
      "servertype": "openocd",
      "gdbPath": "gdb-multiarch",
      "device": "RP2040",
      "configFiles": ["interface/cmsis-dap.cfg", "target/rp2040.cfg"],
      "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
      "runToEntryPoint": "main",
      // Give restart the same functionality as runToEntryPoint - main
      // Work around for stopping at main on restart
      "postRestartCommands": ["break main", "continue"]
    }*/
    {
      "name": "Duo Core Debug",
      "device": "RP2040",
      //  "gdbPath": "arm-none-eabi-gdb",
      "gdbPath": "gdb-multiarch",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/build/pico_app.elf",
      "request": "launch",
      "type": "cortex-debug",
      "servertype": "openocd",
      "configFiles": [
        "interface/cmsis-dap.cfg",
        "target/rp2040-core0.cfg"
        // "/target/rp2040.cfg"
        // "-c 'set USE_CORE 0' -f target/rp2040.cfg"
      ],
      "openOCDLaunchCommands": ["transport select swd", "adapter speed 4000"],
      "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
      "runToEntryPoint": "main",
      "postRestartCommands": ["break main", "continue"]
    }



    // sudo mount /dev/sda1 /media/agmui/; sudo cp *.uf2 /media/agmui/; sudo umount /media/agmui/
  ]
}
